version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:18
  gcloud-executor:
    docker:
      - image: google/cloud-sdk

jobs:
  install_dependencies:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          key: npm-cache-{{ checksum "package-lock.json" }}
          paths:
            - "node_modules"

  build:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Build
          command: npm run dev:build
      - save_cache:
          key: dist-cache-{{ .Revision }}
          paths:
            - "dist"

  deploy-prod:
    executor: gcloud-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - dist-cache-{{ .Revision }}
      - run:
          name: Authenticate with Google Cloud
          command: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      - run:
          name: Deploy functions for main branch
          command: |
            gcloud functions deploy marcos-assistant --source dist --runtime nodejs18 --trigger-http --allow-unauthenticated --entry-point message --project marcos-assistant-383518 --env-vars-file=.env.yaml
            gcloud functions deploy process-queue --source dist --runtime nodejs18 --trigger-http --allow-unauthenticated --entry-point queue --project marcos-assistant-383518 --env-vars-file=.env.yaml

  deploy-dev:
    executor: gcloud-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - dist-cache-{{ .Revision }}
      - run:
          name: Authenticate with Google Cloud
          command: echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
      - run:
          name: Deploy functions for development branch
          command: |
            gcloud functions deploy marcos-assistant-dev --source dist --runtime nodejs18 --trigger-http --allow-unauthenticated --entry-point message --project marcos-assistant-383518 --env-vars-file=.env.yaml
            gcloud functions deploy process-queue-dev --source dist --runtime nodejs18 --trigger-http --allow-unauthenticated --entry-point queue --project marcos-assistant-383518 --env-vars-file=.env.yaml

workflows:
  version: 2
  build_deploy:
    jobs:
      - install_dependencies:
        filters:
          branches:
            only:
              - development
              - main
      - build:
          requires:
            - install_dependencies
          filters:
            branches:
              only:
                - development
                - main
      - deploy-prod:
          requires:
            - build
          filters:
            branches:
              only:
                - main
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              only:
                - development
